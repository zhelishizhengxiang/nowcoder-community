<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simon.community.dao.MessageMapper">

  <sql id="Base_Column_List">
    id, from_id, to_id, conversation_id, content, `status`, create_time
  </sql>
  <select id="selectConversations" resultType="com.simon.community.pojo.Message">
    select <include refid="Base_Column_List"></include> and count(distinct conversation_id)
    from message
    where id in(
        select max(id) from messege
        where status!=2 and from_id!=1 and (from_id=#{userId} or to_id=#{toId})
        group by conversation_id
    )
    order by create_time desc
    limit #{offset},#{limit}
  </select>

  <select id="selectConversationsCount" resultType="java.lang.Integer">
    select count(id)
    from message
    where id in(
        select max(id) from messege
        where status!=2 and from_id!=1 and (from_id=#{userId} or to_id=#{toId})
        group by conversation_id
    )
  </select>
  <select id="selectLetters" resultType="com.simon.community.pojo.Message">
      select <include refid="Base_Column_List"></include>
      from message
      where status!=2 and from_id!=1 and conversation_id=#{conversationId}
      order by create_time desc
      limit #{offset},#{limit}
  </select>
  <select id="selectLettersCount" resultType="java.lang.Integer">
      select count(id)
      from message
      where status!=2 and from_id!=1 and conversation_id=#{conversationId}
  </select>
  <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
      select count(id) from message
      where status!=2
        and from_id!=1 and to_id=#{userId}
        <if test="conversationId!=null">
            and conversation_id=#{conversationId}
        </if>
        and status=0
  </select>

</mapper>